#server.http.port=8080
# Port for HTTPS and read by Spring Boot via @Value("${server.port:443}")
server.port=8080

#server.ssl.key-store=E:/IntelliJ/BookStore/src/main/resources/cert.p12
#server.ssl.key-store-password=pass123
#server.ssl.key-alias=bookstoreDH

paypal.mode=sandbox
paypal.client.app =AaDv7dd6LzvqEObrvXRgcZXgM80hCXXS6968Z392LY6pWrVs0vMdxoslnh2J44CUPNJVRSgswCMcpcJa
paypal.client.secret=EIAbZXu6kQz77Ah7QH_mRc85U7oEvU8P4bkvX1lb7_QdpaxpscyUTfu2O6dLPFWCP2VmWZ7ic7TjqjwT

spring.thymeleaf.cache=false
spring.thymeleaf.enabled=false
file.upload.path=E:/IntelliJ/BookStore/src/main/resources/META-INF/img
# MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true 
# Enable support of multi-part uploads.
# spring.http.multipart.file-size-threshold=3 # Threshold after which files will be written to disk. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.location=E:/IntelliJ/BookStore/src/main/resources/META-INF/img
# Intermediate location of uploaded files.
spring.servlet.multipart.max-file-size=128MB
# Max file size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.max-request-size=128MB
# Max request size. Values can use the suffixed "MB" or "KB" to indicate a Megabyte or Kilobyte size.
spring.servlet.multipart.resolve-lazily=false 
# Whether to resolve the multipart request lazily at the time of file or parameter access.
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=BookstoreDinhHieu@gmail.com
spring.mail.password=BookstoreDinhHieu1999
spring.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from.email=BookstoreDinhHieu@gmail.com
